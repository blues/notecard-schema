{
    "$schema": "https://json-schema.org/draft/2020-12/schema",
    "$id": "https://raw.githubusercontent.com/blues/notecard-schema/master/dfu.get.req.notecard.api.json",
    "title": "dfu.get Request Application Programming Interface (API) Schema",
    "description": "Retrieves downloaded firmware data from the Notecard for use with [IAP host MCU firmware updates](https://dev.blues.io/notehub/host-firmware-updates/iap-firmware-update/).",
    "type": "object",
    "version": "0.2.1",
    "apiVersion": "9.1.1",
    "skus": ["CELL", "CELL+WIFI", "WIFI"],
    "properties": {
        "length": {
            "description": "The number of bytes of firmware data to read and return to the host. Set to `0` to verify that the Notecard is in DFU mode without attempting to retrieve data.",
            "type": "integer"
        },
        "offset": {
            "description": "The offset to use before performing a read of firmware data.",
            "type": "integer"
        },
        "cmd": {
            "description": "Command for the Notecard (no response)",
            "const": "dfu.get"
        },
        "req": {
            "description": "Request for the Notecard (expects response)",
            "const": "dfu.get"
        }
    },
    "oneOf": [
        {
            "required": [
                "req"
            ],
            "properties": {
                "req": {
                    "const": "dfu.get"
                }
            }
        },
        {
            "required": [
                "cmd"
            ],
            "properties": {
                "cmd": {
                    "const": "dfu.get"
                }
            }
        }
    ],
    "additionalProperties": false,
    "annotations": [
        {
            "title": "note",
            "description": "This request is functional only when the Notecard has been set to `dfu` mode with a `hub.set, mode:dfu` request."
        }
    ],
    "samples": [
        {
            "title": "Retrieve Firmware Data",
            "description": "Retrieve 32 bytes of firmware data from the Notecard with an offset of 32 bytes.",
            "json": "{\"req\": \"dfu.get\", \"length\": 32, \"offset\": 32}"
        },
        {
            "title": "Verify DFU Mode",
            "description": "Verify that the Notecard is in DFU mode without retrieving data.",
            "json": "{\"req\": \"dfu.get\", \"length\": 0}"
        },
        {
            "title": "Read First Block",
            "description": "Read the first 1024 bytes of firmware data from the beginning.",
            "json": "{\"req\": \"dfu.get\", \"length\": 1024, \"offset\": 0}"
        }
    ]
}