{
    "$schema": "https://json-schema.org/draft/2020-12/schema",
    "$id": "https://raw.githubusercontent.com/blues/notecard-schema/master/note.template.rsp.notecard.api.json",
    "title": "note.template Response Application Programming Interface (API) Schema",
    "type": "object",
    "version": "0.2.1",
    "apiVersion": "9.1.1",
    "skus": [
        "CELL",
        "CELL+WIFI",
        "LORA",
        "WIFI"
    ],
    "properties": {
        "bytes": {
            "description": "The number of bytes that will be transmitted to Notehub, per Note, before compression.",
            "type": "integer"
        },
        "template": {
            "description": "`true` if an active template exists on the Notefile.",
            "type": "boolean",
            "minApiVersion": "3.2.1"
        },
        "body": {
            "description": "If the `verify` argument is provided and the Notefile has an active template, the template `body`.",
            "type": "object"
        },
        "length": {
            "description": "If the `verify` argument is provided and the Notefile has an active template with a payload, the payload length.",
            "type": "integer"
        },
        "format": {
            "description": "If the `format` argument is provided, this represents the format applied to the template.",
            "type": "string",
            "minApiVersion": "6.2.3"
        }
    },
    "additionalProperties": false,
    "samples": [
        {
            "title": "Template Set Response",
            "description": "Response when template is successfully set, showing bytes per note.",
            "json": "{\"bytes\": 40}"
        },
        {
            "title": "Template Verify Response",
            "description": "Response when verifying existing template with all fields.",
            "json": "{\"template\": true, \"body\": {\"temperature\": 14.1, \"humidity\": 11}, \"bytes\": 40}"
        },
        {
            "title": "Template with Format Response",
            "description": "Response showing compact format template.",
            "json": "{\"template\": true, \"format\": \"compact\", \"bytes\": 25}"
        }
    ]
}